% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/align.R
\name{alignpair}
\alias{alignpair}
\title{Pairwise alignment of sequences and/or multiple sequence alignments.}
\usage{
alignpair(x, y, d = 8, e = 2, S = NULL, qe = NULL,
  type = "semiglobal", offset = 0, windowspace = "WilburLipman",
  pseudocounts = "background", residues = NULL, gapchar = "-",
  cpp = TRUE)
}
\arguments{
\item{x, y}{character vectors or character matrices of aligned sequences.}

\item{d, e}{gap opening and gap extension penalties for pairwise sequence
alignment.}

\item{S}{an optional substitution matrix with \code{dimnames} attributes
corresponding to the residue alphabet. If NULL matches are
scored as 1 and mismatches as -1.}

\item{type}{a character string specifying whether the alignment should be
'global' (penalized end gaps), 'semiglobal' (default; free end gaps) or
local (highest scoring subalignment).}

\item{residues}{either NULL (default; emitted residues are automatically
detected from the input sequences), or a case sensitive character vector specifying the
residue alphabet (e.g. c(A, C, G, T) for DNA).
Note that the former option can be slow for large character vectors;
therefore specifying the residue alphabet can increase speed in these cases.
Also note that the default setting \code{residues = NULL} will not
detect rare residues that are not present in the input sequences, and thus will
not assign them emission probabilities.}
}
\value{
a character matrix of aligned sequences.
}
\description{
\code{alignpair} uses the Viterbi algorithm to find the optimal alignment
between two sequences, a sequence and an alignment, or two alignments.
}
\examples{
x <- c("H", "E", "A", "G", "A", "W", "G", "H", "E", "E")
y <- c("P", "A", "W", "H", "E", "A", "E")
z <- align(x, y)
alignpair(x, z)

}
\references{
Soding...
}

